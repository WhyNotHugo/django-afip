name: Unit Tests

on:
  push:
    branches:
      - "main"
  schedule:
    - cron: "0 0 * * *"
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  postgres:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        python: ["3.6", "3.7", "3.8", "3.9"]
        django: ["22", "30", "31", "32"]
    name: django-${{ matrix.django }}, python${{ matrix.python }}, postgres
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - run: pip install tox codecov
      - run: sudo apt-get update && sudo apt-get install libpq-dev
      - run: tox
        env:
          TOXENV: django${{ matrix.django }}-postgres
          DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      - run: codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  # mysql:
  #   runs-on: ubuntu-latest
  #   services:
  #   mysql:
  #       image: postgres
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python: [ '3.6', '3.7', '3.8', '3.9' ]
  #       django: [ '22', '30', '31', '32']
  #   name: django-${{ matrix.django }}, python${{ matrix.python }}, mysql
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python }}
  #     - run: pip install tox codecov
  #     - run: sudo apt-get update && sudo apt-get install libmysqlclient-dev
  #     - run: tox
  #       env:
  #         TOXENV: django${{ matrix.django }}-mysql
  #     - run: codecov
  #       env:
  #         CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  sqlite:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ["3.6", "3.7", "3.8", "3.9"]
        django: ["22", "30", "31", "32"]
    name: django-${{ matrix.django }}, python${{ matrix.python }}, sqlite
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - run: pip install tox codecov
      - run: tox
        env:
          TOXENV: django${{ matrix.django }}-sqlite
      - run: codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
