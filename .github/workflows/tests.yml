name: Unit Tests

on:
  push:
    branches:
      - "main"
  schedule:
    - cron: "0 0 * * *"
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  postgres:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    strategy:
      fail-fast: false
      matrix:
        python: ["3.9", "3.11"]
        django: ["32", "42"]
        include:
          - python: "3.7"
            django: "32"
          - python: "3.8"
            django: "32"
    name: django-${{ matrix.django }}, python${{ matrix.python }}, postgres
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - run: pip install tox
      - run: sudo apt-get update && sudo apt-get install libpq-dev
      - run: tox
        env:
          TOXENV: django${{ matrix.django }}-postgres
  mysql:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mariadb
        env:
          MARIADB_PASSWORD: mysql
          MARIADB_ROOT_PASSWORD: mysql
        options: >-
          --health-cmd="healthcheck.sh --connect --innodb_initialized"
          --health-interval=5s
          --health-timeout=2s
          --health-retries=3
        ports:
          - 3306:3306
    strategy:
      fail-fast: false
      matrix:
        python: ["3.9", "3.10"]
        django: ["32", "42"]
    name: django-${{ matrix.django }}, python${{ matrix.python }}, mysql
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - run: pip install tox
      - run: sudo apt-get update && sudo apt-get install libmysqlclient-dev
      - run: tox
        env:
         TOXENV: django${{ matrix.django }}-mysql
  sqlite:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - python: "3.10"
            django: "42"
    name: django-${{ matrix.django }}, python${{ matrix.python }}, sqlite
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - run: pip install tox
      - run: tox
        env:
          TOXENV: django${{ matrix.django }}-sqlite
  mypy:
    runs-on: ubuntu-latest
    name: mypy
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - run: pip install -e .
      - run: pip install -r requirements-dev.txt
      - run: mypy .
