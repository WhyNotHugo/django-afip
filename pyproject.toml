[project]
name = "django-afip"
authors = [
    {name = "Hugo Osvaldo Barrera", email = "hugo@whynothugo.ln"},
]
description = "AFIP integration for django"
readme = "README.rst"
requires-python = ">=3.8"
keywords = ["argentina", "afip", "wsdl"]
license = {text = "ISC"}
classifiers = [
  "Development Status :: 6 - Mature",
  "Environment :: Web Environment",
  "Framework :: Django",
  "Framework :: Django :: 3.2",
  "Framework :: Django :: 4.0",
  "Framework :: Django :: 4.1",
  "Framework :: Django :: 4.2",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: ISC License (ISCL)",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Internet :: WWW/HTTP",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
  "cryptography>=3.2,<40",
  "django>=3.2,<4.3",
  "django_renderpdf>=3.0.0,<5.0.0",
  "lxml>=3.4.4",
  "pyopenssl>=16.2.0",
  'backports.zoneinfo;python_version<"3.9"',
  "setuptools-git>=1.1",
  "wheel>=0.24.0",
  "zeep>=1.1.0,<5.0.0",
  "qrcode[pil]>=6.1,<8.0",
  "pyyaml>=5.3.1,<7.0.0",
]
dynamic = ["version"]

[project.optional-dependencies]
docs = [
  "Sphinx>=3.4.0", # See: https://github.com/edoburu/sphinxcontrib-django/issues/49
  "sphinx_rtd_theme",
  "sphinxcontrib_django",
  "dj_database_url",
]
postgres = [
  "psycopg2",
]
mysql = [
  "mysqlclient",
]
factories = [
  "factory-boy",
]
dev = [
  "coverage",
  "dj_database_url",
  "django-stubs[compatible-mypy]",
  "factory-boy",
  "freezegun",
  "pytest-cov",
  "pytest-django",
  "types-backports",
  "types-freezegun",
  "types-pyOpenSSL",
  "types-pytz",
  "types-requests"
]

[project.urls]
homepage = "https://github.com/WhyNotHugo/django-afip"
documentation = "https://django-afip.readthedocs.io/"
issues = "https://github.com/WhyNotHugo/django-afip/issues"
changelog = "https://django-afip.readthedocs.io/en/latest/changelog.html"
donate = "https://liberapay.com/WhyNotHugo/"
funding = "https://github.com/sponsors/WhyNotHugo"

[tool.setuptools]
packages = ["django_afip"]

[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]

[tool.setuptools_scm]
write_to = "django_afip/version.py"
version_scheme = "post-release"

[tool.pytest.ini_options]
addopts = """
  --reuse-db
  --cov=django_afip
  --cov-report=term-missing:skip-covered
  --no-cov-on-fail
  --color=yes
"""
markers = [
  "live: Tests done with the live test environment."
]
DJANGO_SETTINGS_MODULE = "testapp.settings"

[tool.mypy]
ignore_missing_imports = true
plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
django_settings_module = "testapp.settings"

[tool.ruff.isort]
force-single-line = true
required-imports = ["from __future__ import annotations"]

[tool.coverage.run]
source = ["django_afip"]

[tool.ruff]
select = [
    "F",
    "E",
    "W",
    "I",
    # "N",
    "UP",
    "YTT",
    "ANN",
    "B",
    "A",
    "C4",

    "ISC",
    "ICN",
    "G",
    "INP",
    "PIE",
    "PYI",

    "PT",
    "Q",
    "RSE",
    "RET",
    "SIM",
    "TID",
    "TCH",
    "INT",
    "PGH",
    "PLE",
    "RUF",
]
ignore = [
  "ANN101",  # Annotation for 'self'
  "ANN002",  # Annotations for *args
  "ANN003",  # Annotations for **kwargs
  "PT004"
]
target-version = "py38"

[tool.ruff.per-file-ignores]
# Fails with auto-generated migrations. Unsolvable contradiction between ruff and mypy.
# This likely needs to be addressed in Django itself (either use an immutable
# type or annotate these fields as ClassVar)
"django_afip/migrations/0*.py"= ["RUF012"]

[tool.coverage.report]
exclude_lines = [
    "if TYPE_CHECKING:",
]
